#############################################################################
# Makefile for building: libmenubased.a
# Generated by qmake (1.07a) (Qt 3.3.3) on: Sun Feb 27 12:52:42 2005
# Project:  menubased.pro
# Template: lib
# Command: $(QMAKE) -o Makefile menubased.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -mcpu=athlon-xp -pipe -march=athlon-xp -O2  -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -mcpu=athlon-xp -pipe -march=athlon-xp -O2  -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/qt/3/mkspecs/linux-g++ -I. -I../../../../src/qpcliente/qpcgui/menubased -I../../../../src/qpcliente/qpcred -I../../../../sbase/sbqpack -I../../../../sbase/sbgui -I../../../../sbase/sbxml -I../../../../sbase/sbred -I../../../../sbase/sblogica -I../../../../sbase/sbcontrol -I../../../../sbase/sbbd -I$(QTDIR)/include -I.moc/
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = gclconfigurador.h \
		gclconfiguraempresa.h \
		gclcrearcliente.h \
		gclogin.h \
		gclprincipal.h \
		gclselectuser.h
SOURCES = gclconfigurador.cpp \
		gclconfiguraempresa.cpp \
		gclcrearcliente.cpp \
		gclogin.cpp \
		gclprincipal.cpp \
		gclselectuser.cpp
OBJECTS = .obj/gclconfigurador.o \
		.obj/gclconfiguraempresa.o \
		.obj/gclcrearcliente.o \
		.obj/gclogin.o \
		.obj/gclprincipal.o \
		.obj/gclselectuser.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = .moc/moc_gclconfigurador.cpp \
		.moc/moc_gclconfiguraempresa.cpp \
		.moc/moc_gclcrearcliente.cpp \
		.moc/moc_gclogin.cpp \
		.moc/moc_gclprincipal.cpp \
		.moc/moc_gclselectuser.cpp
OBJMOC = .obj/moc_gclconfigurador.o \
		.obj/moc_gclconfiguraempresa.o \
		.obj/moc_gclcrearcliente.o \
		.obj/moc_gclogin.o \
		.obj/moc_gclprincipal.o \
		.obj/moc_gclselectuser.o
DIST	   = menubased.pro
QMAKE_TARGET = menubased
DESTDIR  = 
TARGET   = libmenubased.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) ../../../../sbase/sbqpack/libsbqpack.a ../../../../sbase/sbgui/libsbgui.a ../../../../sbase/sbxml/libsbxml.a ../../../../sbase/sbred/libsbred.a ../../../../sbase/sblogica/libsblogica.a ../../../../sbase/sbcontrol/libsbcontrol.a ../../../../sbase/sbbd/libsbbd.a ../../../../src/qpcliente/qpcred/libqpcred.a
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: menubased.pro  /usr/qt/3/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) -o Makefile menubased.pro
qmake: 
	@$(QMAKE) -o Makefile menubased.pro

dist: 
	@mkdir -p .obj/menubased && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/menubased/ && ( cd `dirname .obj/menubased` && $(TAR) menubased.tar menubased && $(GZIP) menubased.tar ) && $(MOVE) `dirname .obj/menubased`/menubased.tar.gz . && $(DEL_FILE) -r .obj/menubased

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/gclconfigurador.o: gclconfigurador.cpp gclconfigurador.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/gclconfigurador.o gclconfigurador.cpp

.obj/gclconfiguraempresa.o: gclconfiguraempresa.cpp gclconfiguraempresa.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/gclconfiguraempresa.o gclconfiguraempresa.cpp

.obj/gclcrearcliente.o: gclcrearcliente.cpp gclcrearcliente.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/gclcrearcliente.o gclcrearcliente.cpp

.obj/gclogin.o: gclogin.cpp gclogin.h \
		gclselectuser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/gclogin.o gclogin.cpp

.obj/gclprincipal.o: gclprincipal.cpp gclprincipal.h \
		gclcrearcliente.h \
		gclogin.h \
		gclconfiguraempresa.h \
		gclselectuser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/gclprincipal.o gclprincipal.cpp

.obj/gclselectuser.o: gclselectuser.cpp gclselectuser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/gclselectuser.o gclselectuser.cpp

.obj/moc_gclconfigurador.o: .moc/moc_gclconfigurador.cpp  gclconfigurador.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_gclconfigurador.o .moc/moc_gclconfigurador.cpp

.obj/moc_gclconfiguraempresa.o: .moc/moc_gclconfiguraempresa.cpp  gclconfiguraempresa.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_gclconfiguraempresa.o .moc/moc_gclconfiguraempresa.cpp

.obj/moc_gclcrearcliente.o: .moc/moc_gclcrearcliente.cpp  gclcrearcliente.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_gclcrearcliente.o .moc/moc_gclcrearcliente.cpp

.obj/moc_gclogin.o: .moc/moc_gclogin.cpp  gclogin.h gclselectuser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_gclogin.o .moc/moc_gclogin.cpp

.obj/moc_gclprincipal.o: .moc/moc_gclprincipal.cpp  gclprincipal.h gclcrearcliente.h \
		gclogin.h \
		gclconfiguraempresa.h \
		gclselectuser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_gclprincipal.o .moc/moc_gclprincipal.cpp

.obj/moc_gclselectuser.o: .moc/moc_gclselectuser.cpp  gclselectuser.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_gclselectuser.o .moc/moc_gclselectuser.cpp

.moc/moc_gclconfigurador.cpp: $(MOC) gclconfigurador.h
	$(MOC) gclconfigurador.h -o .moc/moc_gclconfigurador.cpp

.moc/moc_gclconfiguraempresa.cpp: $(MOC) gclconfiguraempresa.h
	$(MOC) gclconfiguraempresa.h -o .moc/moc_gclconfiguraempresa.cpp

.moc/moc_gclcrearcliente.cpp: $(MOC) gclcrearcliente.h
	$(MOC) gclcrearcliente.h -o .moc/moc_gclcrearcliente.cpp

.moc/moc_gclogin.cpp: $(MOC) gclogin.h
	$(MOC) gclogin.h -o .moc/moc_gclogin.cpp

.moc/moc_gclprincipal.cpp: $(MOC) gclprincipal.h
	$(MOC) gclprincipal.h -o .moc/moc_gclprincipal.cpp

.moc/moc_gclselectuser.cpp: $(MOC) gclselectuser.h
	$(MOC) gclselectuser.h -o .moc/moc_gclselectuser.cpp

####### Install

install:  

uninstall:  

