#############################################################################
# Makefile for building: qpinstalador
# Generated by qmake (1.07a) (Qt 3.3.3) on: Mon Jan 31 18:07:48 2005
# Project:  qpinstalador.pro
# Template: app
# Command: $(QMAKE) -o Makefile qpinstalador.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -mcpu=athlon-xp -pipe -march=athlon-xp -O2  -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -mcpu=athlon-xp -pipe -march=athlon-xp -O2  -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/qt/3/mkspecs/linux-g++ -I. -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   =  -Wl,-rpath,$(QTDIR)/lib
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = qpinstalador.h
SOURCES = qpinstalador.cpp
OBJECTS = qpinstalador.o \
		qmake_image_collection.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_qpinstalador.cpp
OBJMOC = moc_qpinstalador.o
DIST	   = qpinstalador.pro
QMAKE_TARGET = qpinstalador
DESTDIR  = 
TARGET   = qpinstalador

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: qpinstalador.pro  /usr/qt/3/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) -o Makefile qpinstalador.pro
qmake: 
	@$(QMAKE) -o Makefile qpinstalador.pro

dist: 
	@mkdir -p .tmp/qpinstalador && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/qpinstalador/ && $(COPY_FILE) --parents ../artwork/presentacion.png .tmp/qpinstalador/ && ( cd `dirname .tmp/qpinstalador` && $(TAR) qpinstalador.tar qpinstalador && $(GZIP) qpinstalador.tar ) && $(MOVE) `dirname .tmp/qpinstalador`/qpinstalador.tar.gz . && $(DEL_FILE) -r .tmp/qpinstalador

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
		-$(DEL_FILE) qmake_image_collection.cpp
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

qpinstalador.o: qpinstalador.cpp qpinstalador.h

moc_qpinstalador.o: moc_qpinstalador.cpp  qpinstalador.h 

moc_qpinstalador.cpp: $(MOC) qpinstalador.h
	$(MOC) qpinstalador.h -o moc_qpinstalador.cpp

qmake_image_collection.o: qmake_image_collection.cpp

qmake_image_collection.cpp: ../artwork/presentacion.png
	$(UIC)  -embed qpinstalador ../artwork/presentacion.png -o qmake_image_collection.cpp

####### Install

install:  

uninstall:  

